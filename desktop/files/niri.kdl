// Input devices configuration.
input {
	// Keyboard configuration.
	keyboard {
		xkb {
			// Keyboard layout to use.
			layout "fr,us"

			// Keyboard layout variant to use.
			variant ",intl"
		}

		// Delay in milliseconds before a key is held down.
		repeat-delay 250

		// Rate in characters per second to repeat when a held-down key is held down.
		repeat-rate 30

		// Whether to activate the numlock at startup.
		numlock
	}

	// Whether to enable tap-to-click on the touchpad.
	touchpad { tap; }

	// Acceleration profile for the mouse.
	// [ adaptive | flat ]
	mouse { accel-profile "flat"; }

	// Acceleration profile for the trackpoint.
	// [ adaptive | flat ]
	trackpoint { accel-profile "flat"; }

	// Whether to disable Niri handling the power button instead of systemd or yourself.
	disable-power-key-handling

	// Focus windows & outputs automatically when moving the cursor into them.
	// Setting `max-scroll-amount="0%"` makes it work only on windows already fully on screen.
	focus-follows-mouse max-scroll-amount="90%"

	// Whether switching to the same workspace twice will switch back-&-forth between the current & last one.
	workspace-auto-back-and-forth
}

// Output configuration for the Acer XV242Y, plugged in via DisplayPort
/-output "DP-1" {
	// Mode (resolution & refresh rate) of the output (<width>x<height>@<refresh rate>).
	mode "1920x1080@119.98200"

	// Whether this output should be the one to get focus at startup.
	focus-at-startup
}

// Bindings.
binds {
	// Switch between keyboard layouts.
	Super+L {
		spawn "sh" "-c" "niri msg action switch-layout prev && dunstify -t 2500 \"Keyboard layout changed\" \"$(niri msg keyboard-layouts)\" "
	}

	// Show a list of important bindings.
	Super+H { show-hotkey-overlay; }

	// Switch workspaces (numerical).
	Super+Ampersand  { focus-workspace 1; }
	Super+Eacute     { focus-workspace 2; }
	Super+Quotedbl   { focus-workspace 3; }
	Super+Apostrophe { focus-workspace 4; }
	Super+Parenleft  { focus-workspace 5; }
	Super+Minus      { focus-workspace 6; }
	Super+Egrave     { focus-workspace 7; }
	Super+Underscore { focus-workspace 8; }

	Super+1 { focus-workspace 1; }
	Super+2 { focus-workspace 2; }
	Super+3 { focus-workspace 3; }
	Super+4 { focus-workspace 4; }
	Super+5 { focus-workspace 5; }
	Super+6 { focus-workspace 6; }
	Super+7 { focus-workspace 7; }
	Super+8 { focus-workspace 8; }

	// Switch a workspace (directional).
	Super+Page_Up { focus-workspace-up; }
	Super+Page_Down { focus-workspace-down; }

	Super+Control+WheelScrollUp cooldown-ms=75 { focus-workspace-up; }
	Super+Control+WheelScrollDown cooldown-ms=75 { focus-workspace-down; }

	// Move the active window to a workspace (numerical).
	Super+Shift+Ampersand  { move-window-to-workspace 1; }
	Super+Shift+Eacute     { move-window-to-workspace 2; }
	Super+Shift+Quotedbl   { move-window-to-workspace 3; }
	Super+Shift+Apostrophe { move-window-to-workspace 4; }
	Super+Shift+Parenleft  { move-window-to-workspace 5; }
	Super+Shift+Minus      { move-window-to-workspace 6; }
	Super+Shift+Egrave     { move-window-to-workspace 7; }
	Super+Shift+Underscore { move-window-to-workspace 8; }

	Super+Shift+1 { move-window-to-workspace 1; }
	Super+Shift+2 { move-window-to-workspace 2; }
	Super+Shift+3 { move-window-to-workspace 3; }
	Super+Shift+4 { move-window-to-workspace 4; }
	Super+Shift+5 { move-window-to-workspace 5; }
	Super+Shift+6 { move-window-to-workspace 6; }
	Super+Shift+7 { move-window-to-workspace 7; }
	Super+Shift+8 { move-window-to-workspace 8; }

	// Move the active window to a workspace (directional).
	Super+Shift+Page_Up   { move-window-to-workspace-up; }
	Super+Shift+Page_Down { move-window-to-workspace-down; }

	Super+Shift+WheelScrollUp cooldown-ms=150   { move-window-to-workspace-up; }
	Super+Shift+WheelScrollDown cooldown-ms=150 { move-window-to-workspace-down; }

	// Window focus switch.
	Super+Left             { focus-column-left; }
	Super+Down             { focus-window-down; }
	Super+Up               { focus-window-up; }
	Super+Right            { focus-column-right; }
	Super+Home             { focus-column-first; }
	Super+End              { focus-column-last; }
	Super+WheelScrollDown  { focus-window-down; }
	Super+WheelScrollUp    { focus-window-up; }
	Super+WheelScrollLeft  { focus-column-left; }
	Super+WheelScrollRight { focus-column-right; }

	// Move windows.
	Super+Shift+Left  { move-column-left; }
	Super+Shift+Down  { move-window-down; }
	Super+Shift+Up    { move-window-up; }
	Super+Shift+Right { move-column-right; }
	Super+Shift+Home  { move-column-to-first; }
	Super+Shift+End   { move-column-to-last; }

	// Monitor focus switch.
	Super+Ctrl+Left  { focus-column-left; }
	Super+Ctrl+Down  { focus-monitor-down; }
	Super+Ctrl+Up    { focus-monitor-up; }
	Super+Ctrl+Right { focus-column-right; }

	// Move windows to a monitor.
	Super+Ctrl+Shift+Left  { move-window-to-monitor-left; }
	Super+Ctrl+Shift+Down  { move-window-to-monitor-down; }
	Super+Ctrl+Shift+Up    { move-window-to-monitor-up; }
	Super+Ctrl+Shift+Right { move-window-to-monitor-right; }

	// Finer adjustment to column width.
	Super+Equal { set-column-width "-1"; }
	Super+Plus  { set-column-width "+1"; }

	// Finer adjustment to window height.
	Super+Shift+Equal { set-window-height "-1"; }
	Super+Shift+Plus  { set-window-height "+1"; }

	// Move the focused window in and out of a column.
	Mod+Comma  { consume-or-expel-window-left; }
	Mod+Period { consume-or-expel-window-right; }

	// Toggle floating mode for the current window.
	Super+F { toggle-window-floating; }

	// Toggle fullscreen mode for the current window.
	Super+Shift+F { fullscreen-window; }

	// Toggle maximize mode for the current column.
	Super+Ctrl+F { maximize-column; }

	// Expand the current column to the available width.
	Super+Shift+Ctrl+F { expand-column-to-available-width; }

	// Switch focus between floating & tilling windows.
	Super+Tab { switch-focus-between-floating-and-tiling; }

	// Toggle between the different preset column width options.
	Super+R { switch-preset-column-width; }

	// Toggle between the different preset window height options.
	Super+Shift+R { switch-preset-window-height; }

	// Center the current column.
	Super+C { center-column; }

	// Center all fully visible columns on screen.
	Super+Ctrl+C { center-visible-columns; }

	// Toggle the overview mode.
	Super+Space repeat=false { toggle-overview; }

	// Toggle tabbed column display mode.
	Mod+W { toggle-column-tabbed-display; }

	// Close the active window.
	Super+Shift+C { close-window; }

	// Screen brightness control.
	XF86MonBrightnessUp         allow-when-locked=true { spawn "brightnessctl" "set" "2%+"; }
	XF86MonBrightnessDown       allow-when-locked=true { spawn "brightnessctl" "set" "2%-"; }

	// Media control.
	XF86AudioPlay allow-when-locked=true { spawn "playerctl" "play-pause"; }
	XF86AudioStop allow-when-locked=true { spawn "playerctl" "stop"; }
	XF86AudioPrev allow-when-locked=true { spawn "playerctl" "previous"; }
	XF86AudioNext allow-when-locked=true { spawn "playerctl" "next"; }

	// Media audio control.
	Shift+XF86AudioRaiseVolume allow-when-locked=true { spawn "playerctl" "volume" "0.01%+"; }
	Shift+XF86AudioLowerVolume allow-when-locked=true { spawn "playerctl" "volume" "0.01%-"; }

	// Output audio control.
	XF86AudioRaiseVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.01+"; }
	XF86AudioLowerVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.01-"; }
	XF86AudioMute        allow-when-locked=true { spawn "wpctl" "set-mute"   "@DEFAULT_AUDIO_SINK@" "toggle"; }

	// Input audio control.
	Super+XF86AudioRaiseVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SOURCE@" "0.01+"; }
	Super+XF86AudioLowerVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SOURCE@" "0.01-"; }
	Super+XF86AudioMute        allow-when-locked=true { spawn "wpctl" "set-mute"   "@DEFAULT_AUDIO_SOURCE@" "toggle"; }
	XF86AudioMicMute           allow-when-locked=true { spawn "wpctl" "set-mute"   "@DEFAULT_AUDIO_SOURCE@" "toggle"; }

	// Copying screenshots.
	Print       { spawn "/etc/nixos/scripts/screenshot.sh" "--copy" "area"; }
	Ctrl+Print  { spawn "/etc/nixos/scripts/screenshot.sh" "--copy" "monitor"; }
	Shift+Print { spawn "/etc/nixos/scripts/screenshot.sh" "--copy" "window"; }

	// Saving screenshots.
	Super+Print       { spawn "/etc/nixos/scripts/screenshot.sh" "--save" "area"; }
	Super+Ctrl+Print  { spawn "/etc/nixos/scripts/screenshot.sh" "--save" "monitor"; }
	Super+Shift+Print { spawn "/etc/nixos/scripts/screenshot.sh" "--save" "window"; }

	// Open a terminal emulator.
	Super+Return { spawn "sh" "-c" "$TERMINAL"; }

	// Open a program launcher.
	Alt+Return { spawn "/etc/nixos/scripts/programs.sh"; }

	// Open a run launcher.
	Alt+Shift+Return { spawn "fuzzel" "--no-icons" "--width" "50"; }

	// Open an emoji picker.
	Alt+Shift+E { spawn "bemoji" "--private"; }

	// Select from the clipboard.
	Super+Shift+V { spawn "dash" "-c" "clipman pick -t CUSTOM -T 'fuzzel -d --no-icons --width 60'"; }

	// Clear the clipboard.
	Super+Control+V { spawn "dash" "-c" "clipman clear --all && dunstify 'Clipboard cleared.'"; }

	// Opan a permanent "clipboard" file.
	Alt+Shift+V { spawn "dash" "-c" "$TERMINAL -e micro $HOME/Documents/Clipboard.txt"; }

	// Toggle showing/hiding Waybar when launched.
	Super+B { spawn "pkill" "-SIGUSR1" "waybar"; }

	// Exit out of Niri.
	Super+Shift+E   { quit; }
	Ctrl+Alt+Delete { quit; }

	// Applications such as remote-desktop clients and software KVM switches may
	// request that niri stops processing the keyboard shortcuts defined here
	// so they may, for example, forward the key presses as-is to a remote machine.
	// It's a good idea to bind an escape hatch to toggle the inhibitor,
	// so a buggy application can't hold your session hostage.
	//
	// The allow-inhibiting=false property can be applied to other binds as well,
	// which ensures niri always processes them, even when an inhibitor is active.
	Super+Escape allow-inhibiting=false { toggle-keyboard-shortcuts-inhibit; }
}

// Animation settings.
animations {
	// Whether to disable animations.
	//off

	// Slow down or speed up animations by this factor. Values below 1 speed animations up.
	slowdown 0.75
}

// Layout configuration.
layout {
	// Gaps around (inside & outside) windows in pixels.
	gaps 1

	// Set the widths that the `switch-preset-column-width` action toggles between.
	preset-column-widths {
		proportion 0.5
		proportion 1.0
	}

	// Set the default width of new windows.
	default-column-width { proportion 0.5; }

	// Set the heights that the `switch-preset-window-height` action toggles between.
	preset-window-heights {
		// proportions 0.33333
		proportion 0.5
		// proportions 0.66667
		proportion 1.0
	}

	// Border configuration.
	border {
		// Width of the border in pixels.
		width 1

		// Color of the active border.
		active-color "#0080ff"

		// Color of the inactive border.
		inactive-color "#1c1c1c"

		// Color of the border around windows that request your attention.
		urgent-color "#ff0060"
	}

	// Disable the focus ring.
	focus-ring { off; }

	// Tab indicator configuration.
	tab-indicator {
		// Set the gap between the tab indicator and the window in pixels.
		gap 0

		// Length of the indicator.
		length total-proportion=1.0

		// Whether to put the tab indicator "within" the column, rather than outside.
		// This will include it in column sizing and avoid overlaying adjacent columns.
		place-within-column

		// Position of the indicator.
		position "left"

		// Width of the tab indicator
		width 6
	}

	// Structs configuration.
	struts {
		// Set a negative strut for the top and bottom to minimize wasted space.
		// Set a 1px wide strut on the sides to allow easy window switching with the mouse.
		left 1
		right 1
		top -1
		bottom -1
	}

	// Set the default background color when no image is used.
	// Set to `"transparent"` to show the image background when the background is placed withing the backdrop.
	background-color "transparent"
}


// Miscellaneous settings.

// Programs that should appear on startup.
// spawn-at-startup "fcitx5"
spawn-at-startup "hyprpaper"
spawn-at-startup "thunar" "--daemon"
spawn-at-startup "xwayland-satellite" ":12"
spawn-at-startup "wl-paste" "-t" "text" "--watch" "clipman" "store" "--no-persist" "--max-items=100"
spawn-at-startup "/etc/nixos/scripts/polkit-agent.sh"

// Whether to disable client-side decorations.
prefer-no-csd

// Disable saving screenshots by default, letting scripts handle saving instead.
screenshot-path null

// Environment variables.
environment {
	// Set the current desktop name.
	XDG_CURRENT_DESKTOP "niri"

	// Enable Xwayland integration using XWayland-satellite.
	DISPLAY ":12"

	// GTK: Use wayland if available.
	GDK_BACKEND "wayland"

	// Qt: Use wayland if available.
	QT_QPA_PLATFORM "wayland"

	// Qt: Enable automatic scaling based on the monitor's pixel density.
	QT_AUTO_SCREEN_SCALE_FACTOR "1"

	// Qt: Disable window decorations on QT applications.
	QT_WAYLAND_DISABLE_WINDOWDECORATION "1"

	// Run SDL2 applications on Wayland.
	SDL_VIDEODRIVER "wayland"

	// Force Clutter applications to use the Wayland backend.
	CLUTTER_BACKEND "wayland"
}

// Cursor configuration.
cursor {
	// Cursor theme.
	xcursor-theme "Bibata-Modern-Ice"

	// Cursor size.
	xcursor-size 24
}

// Overview configuration.
overview {
	// Color of the backdrop.
	backdrop-color "#17171a"

	// Configuration of shadows around workspaces in the overview.
	workspace-shadow {
		softness 40
		spread 20
		offset x=0 y=0
		color "#00000088"
	}
}

// Whether to disable the hotkey overlay when starting niri.
hotkey-overlay { skip-at-startup; }

// • Open certain windows as floating by default.
// • Make their borders bigger.
window-rule {
	match app-id=r#"firefox$"# title="^Picture-in-Picture$"
	match app-id=r#"librewolf$"# title="^Picture-in-Picture$"
	match app-id=r#"galculator$"#
	match app-id=r#"firefox$"# title="^About Firefox$"
	match app-id=r#"librewolf$"# title="^About LibreWolf$"
	match app-id=r#"gcolor3$"#
	match app-id=r#"thunar$"# title="^File Operation Progress$"
	match app-id=r#"thunar$"# title="^Rename.*$"
	match app-id=r#"dash-calculator.sh$"#
	match app-id=r#"org.gnome.Nautilus$"# title="^Select a background image$"
	open-floating true
	border { width 2; }
}

// Block out certain programs from screen capture.
window-rule {
	match app-id=r#"^org\.keepassxc\.KeePassXC$"#
	block-out-from "screen-capture"
}

// Block out certain programs from screencasts.
window-rule {
	match app-id=r#"^org\.keepassxc\.KeePassXC$"#
	block-out-from "screencast"
}

// Remove borders of certain windows.
window-rule {
	match app-id=r#"^org.vinegarhq.Sober$"#
	border { width 0; }
}

// Open certain windows in their full size.
window-rule {
	match app-id=r#"^gimp$"#
	default-column-width { proportion 1.0; }
}

// Place the background within the backdrop.
layer-rule {
	match namespace="^hyprpaper$"
	place-within-backdrop true
}